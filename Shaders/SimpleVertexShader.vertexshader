#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;

uniform mat4 MVP;
uniform mat4 Model;
uniform mat4 View;
uniform vec3 luzPosition;


out vec3 luzDirection;
out vec3 olhoDirection;
out vec3 normal;
out vec3 pos;

void main(){
    gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
    pos = (Model * vec4(vertexPosition_modelspace,1)).xyz;

    vec3 vertexPosition_cameraspace = (View * Model * vec4(vertexPosition_modelspace,1)).xyz;
	olhoDirection = vec3(0,0,0) - vertexPosition_cameraspace;

    vec3 LightPosition_cameraspace = (View * vec4(luzPosition,1)).xyz;
	luzDirection = LightPosition_cameraspace + olhoDirection;

    normal = (Model * View * vec4(vertexNormal_modelspace,0)).xyz;
}

